<h1>Modifying <%= @name %></h1>

<%  
    
    # Time to start creation of the table
    cols = ChargeColumn.find(:all,
    :conditions => ["charges_id = ?", params[:id]],
    :select => "DISTINCT name",
    :order =>"name ASC")
    
    # All columns/rows
    table = []
    
    # Go through all column types
    for c in cols
    
    	# Find all column values
        values = ChargeColumn.find(:all,
	:conditions => ['name = ? AND charges_id = ?', c.name, params[:id]],
	:select => 'id, value',
        :order => 'value ASC')
        
        #Counts each time a new column is made so that the hash goes to the next column
        count = 0
        
        # Go through all column values
        for v in values
        
            # Find all row values for that column
            rows = ChargeRow.find(:all,
	    :conditions => ["charge_column_id = ?", v.id],
	    :select => "name, value, id",
    	    :order =>"name ASC")
    	    
    	    nextcol = count + 1
    	    
    	    # Create first column. Row values start on the second, or '1'
    	    # This picks up only the starting rows. May need to do checking to find orphaned cells
    	    if count == 0
                table[count] = [{'name'=> c.name, 'id'=> '0'}]
                table[nextcol] = [{'name'=> v.value, 'id'=> v.id}]
            else
                table[nextcol] = [{'name'=> v.value, 'id'=> v.id}]
            
            end
            
            # Create hash of all column values mapped to all row values starting with names
            for r in rows
                
                if count == 0
                    table[count] << {'name'=> r.name, 'id'=> '0'}
                    table[nextcol] << {'name'=>r.name,'value'=> r.value, 'id'=> r.id}
                    
                else
                    table[nextcol] << {'name'=>r.name,'value'=> r.value, 'id'=> r.id}
                end
            
            end
            
            count = count + 1
         
        end
    
    end
    
    # Now time to output the table based on the starting values
    rows = table[0]
    
    html = ''
    
    count = 0
    
    unless table.empty?
    
    for r in rows
        
        if count == 0
            html += '<table><tr><th class="planchargeh">'+r['name']+'</th>'
        else
            html += '<tr><th>'+r['name']+'</th>'
        end
        
        for t in table
        
            ncount = 0
            row = 0
        
            for v in t
            
                unless v['id'] == '0'
                
                    if count == 0 && ncount == 0
                    
                        html += '<th class="planchargeh">'+v['name']+link_to(image_tag('edit.png', :alt => 'Edit Column'), {:action => 'editc', :id => v['id']}, :class => 'icon', :title => 'edit')+link_to(image_tag('delete.png', :alt => 'Delete Column'), { :action => 'destroyc', :id => v['id'] }, :confirm => "Permanently delete this column and all its rows?", :class => 'icon', :title => 'delete', :method => :post)+'</th>'
                        row = 1
                        
                    elsif r['name'] == v['name']
                    
                        html += '<td>'+v['value']+link_to(image_tag('edit.png', :alt => 'Edit Row'), {:action => 'editr', :id => v['id']}, :class => 'icon', :title => 'edit')+link_to(image_tag('delete.png', :alt => 'Delete Row'), { :action => 'destroyr', :id => v['id'] }, :confirm => "Permanently delete this row?", :class => 'icon', :title => 'delete', :method => :post)+'</td>'

                        row = 1
                    end
                else
                    row = 1
                end
                
                ncount = ncount + 1
            
            end
            unless row == 1
	        html += '<td></td>'
            end
        end
        
        html += '</tr>'
        
        count = count + 1
    end
    
    end
    
    html += '</table>'
   %>

<%= html %>